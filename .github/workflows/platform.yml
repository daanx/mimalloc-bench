name: Build and run everything
on:
  workflow_call:
    inputs:
      platform:
        description: 'Base container image to build on'
        required: true
        type: string

jobs:
  build-base-with-docker:
    runs-on: ubuntu-latest
    name: Base Container
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build benchmarks in Docker
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: false
          tags: bench
          target: bench-env
          build-args: |
            platform=${{ inputs.platform }}
          cache-from: type=gha,scope=buildkit_${{ inputs.platform }}
          cache-to: type=gha,mode=max,scope=buildkit_${{ inputs.platform }}

  build-and-benchmark-allocator:
    runs-on: ubuntu-latest
    needs: build-base-with-docker
    strategy:
      matrix:
        allocator: [ff, fg, gd, hd, hm, iso, je, lf, lp, lt, mesh, mng, mi, mi2, nomesh, pa, rp, scudo, sm, sn, sg, tbb, tc, yal, tcg]
        testsuite: [allt]
        predicate: [true, false]
        exclude:
          - predicate: false
          # Not currently working on any platform
          - allocator: pa

          # Following allocators are failing redis testsuite
          - testsuite: allt
            allocator: fg
          - testsuite: allt
            allocator: gd
          - testsuite: allt
            allocator: lf

          # Alpine Specific disables.
          # dh: glibc-specific
          - allocator: dh
            predicate: ${{ inputs.platform == 'alpine' }}
          # fg: Uses execinfo.h, which is a GNU extension
          - allocator: fg
            predicate: ${{ inputs.platform == 'alpine' }}
          # gd: ?
          - allocator: gd
            predicate: ${{ inputs.platform == 'alpine' }}
          # hd: glibc-specific
          - allocator: hd
            predicate: ${{ inputs.platform == 'alpine' }}
          # lp: /__w/mimalloc-bench/mimalloc-bench/extern/lp/Source/bmalloc/libpas/src/libpas/pas_thread_local_cache.c:218:22: error: call to undeclared function 'pthread_getname_np'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
          - allocator: lp
            predicate: ${{ inputs.platform == 'alpine' }}
          # lt: return type 'struct mallinfo' is incomplete
          - allocator: lt
            predicate: ${{ inputs.platform == 'alpine' }}
          # sm: ../src/supermalloc.h:10:31: error: expected initializer before '__THROW'
          - allocator: sm
            predicate: ${{ inputs.platform == 'alpine' }}
          # tcg: [...] specifies less restrictive attribute than its target [...]
          - allocator: tcg
            predicate: ${{ inputs.platform == 'alpine' }}
        include:
          # Following allocators are failing redis testsuite
          - testsuite: cfrac espresso barnes lean larson-sized mstress rptest gs lua
            allocator: lf
          - testsuite: cfrac espresso barnes lean larson-sized mstress rptest gs lua
            allocator: fg
          - testsuite: cfrac espresso barnes lean larson-sized mstress rptest gs lua
            allocator: gd
          


      fail-fast: false
    name: ${{ matrix.allocator }} - build and benchmark
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build allocator and run benchmarks in Docker
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: false
          target: benchmark
          build-args: |
            platform=${{ inputs.platform }}
            allocator=${{ matrix.allocator }}
            benchs=${{ matrix.testsuite }}
            repeats=1
          cache-from: type=gha,scope=buildkit_${{ inputs.platform }}